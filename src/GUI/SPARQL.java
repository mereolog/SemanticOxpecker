/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SPARQL.java
 *
 * Created on 2012-02-23, 21:59:23
 */
package GUI;

import com.hp.hpl.jena.query.*;
import com.hp.hpl.jena.ontology.*;
import com.hp.hpl.jena.rdf.model.*;
import java.awt.Color;


/**
 *
 * @author PG
 */
public class SPARQL extends javax.swing.JFrame {
    
    OntModel model;

    /** Creates new form SPARQL */
    public SPARQL() {
        initComponents();
        
        model = ModelFactory.createOntologyModel(OntModelSpec.OWL_LITE_MEM_RDFS_INF);
        model.setDynamicImports(true);
        model.read("file:"+"data/ontologies/Papers_Ready.owl", "http://www.l3g.pl/ontologies/OntoBeef/Papers.owl", "N-TRIPLE");
        model.loadImports();
        
        for (Individual i : model.listIndividuals(model.getOntClass("http://www.l3g.pl/ontologies/OntoBeef/Conceptualisation.owl#Category")).toSet())
        {
            System.out.println(i.listLabels(null).toSet());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        sparqlQuery = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        sparqlAnswer = new javax.swing.JTextArea();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        sparqlStart = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        sparqlQuery.setColumns(20);
        sparqlQuery.setRows(5);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(GUI.OntoBeefApplication.class).getContext().getResourceMap(SPARQL.class);
        sparqlQuery.setText(resourceMap.getString("sparqlQuery.text")); // NOI18N
        sparqlQuery.setName("sparqlQuery"); // NOI18N
        jScrollPane1.setViewportView(sparqlQuery);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        sparqlAnswer.setColumns(20);
        sparqlAnswer.setRows(5);
        sparqlAnswer.setName("sparqlAnswer"); // NOI18N
        jScrollPane2.setViewportView(sparqlAnswer);

        label1.setName("label1"); // NOI18N
        label1.setText(resourceMap.getString("label1.text")); // NOI18N

        label2.setName("label2"); // NOI18N
        label2.setText(resourceMap.getString("label2.text")); // NOI18N

        sparqlStart.setText(resourceMap.getString("sparqlStart.text")); // NOI18N
        sparqlStart.setName("sparqlStart"); // NOI18N
        sparqlStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sparqlStartActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(label2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(label1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 824, Short.MAX_VALUE))
                            .addContainerGap())
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                            .add(sparqlStart)
                            .add(380, 380, 380)))
                    .add(layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 824, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(9, 9, 9)
                .add(label1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(2, 2, 2)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                .add(26, 26, 26)
                .add(sparqlStart)
                .add(19, 19, 19)
                .add(label2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 240, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sparqlStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sparqlStartActionPerformed
        
        String queryString = sparqlQuery.getText();
	
        String errorMessage="";
        
        Query query = null;
        
        try{
         query = QueryFactory.create(queryString);
        } catch (com.hp.hpl.jena.query.QueryException ex) 
        {
            errorMessage=ex.getMessage();
        }

        if (errorMessage.length()==0)
        {
            // Execute the query and obtain results
            QueryExecution qe = QueryExecutionFactory.create(query, model);
            ResultSet results = qe.execSelect();

            
            sparqlAnswer.setText(ResultSetFormatter.asText(results));

            qe.close();
        }
        else
        {
            //sparqlAnswer.set(Color.red);
            sparqlAnswer.setText(errorMessage);
        }
        
        
   
    }//GEN-LAST:event_sparqlStartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SPARQL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SPARQL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SPARQL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SPARQL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new SPARQL().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private javax.swing.JTextArea sparqlAnswer;
    private javax.swing.JTextArea sparqlQuery;
    private javax.swing.JButton sparqlStart;
    // End of variables declaration//GEN-END:variables
}
